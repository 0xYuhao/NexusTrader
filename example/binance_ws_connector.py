import asyncio
from tradebot.exchange.binance import BinanceAccountType
from tradebot.exchange.binance.websockets import BinanceWSClient


def ws_handler(data):
    if "s" in data:
        _symbol = data['s']
        

async def main():
    try:
        ws = BinanceWSClient(
            account_type=BinanceAccountType.SPOT,
            handler=ws_handler
        )
        symbols = ['BTCUSDT', 'ETHUSDT', 'SOLUSDT', 'XRPUSDT', 'BNBUSDT', 'DOGEUSDT', 'SUIUSDT', 'TONUSDT', '1000PEPEUSDT', 'AVAXUSDT', 'LTCUSDT', 'WIFUSDT', 'BCHUSDT', 'DOTUSDT', 'ADAUSDT', '1000BONKUSDT', 'AAVEUSDT', 'TIAUSDT', 'FTMUSDT', 'LINKUSDT', 'NEARUSDT', 'DOGSUSDT', 'ORDIUSDT', 'FILUSDT', 'WLDUSDT', 'TRXUSDT', 'NOTUSDT', 'OPUSDT', 'ARBUSDT', 'CKBUSDT', 'APTUSDT', 'INJUSDT', 'ATOMUSDT', 'SEIUSDT', 'UNIUSDT', 'MKRUSDT', 'PEPEUSDT', 'ETCUSDT', 'ONDOUSDT', 'CRVUSDT', 'ENAUSDT', 'KASUSDT', 'EOSUSDT', 'PEOPLEUSDT', 'BIGTIMEUSDT', 'FETUSDT', 'TAOUSDT', 'TRBUSDT', 'NEIROETHUSDT', 'DYDXUSDT', 'ZROUSDT', 'POPCATUSDT', 'JUPUSDT', 'STRKUSDT', 'ARUSDT', 'RUNEUSDT', 'BOMEUSDT', 'ENSUSDT', 'GALAUSDT', 'LDOUSDT', '1000SATSUSDT', 'UXLINKUSDT', 'STXUSDT', 'REEFUSDT', 'MEWUSDT', 'IOUSDT', 'APEUSDT', 'ICPUSDT', 'SUNUSDT', 'PENDLEUSDT', 'RENDERUSDT', 'CFXUSDT', '1000FLOKIUSDT', 'ZKUSDT', 'ETHFIUSDT', 'GMTUSDT', 'SAGAUSDT', 'MASKUSDT', 'TURBOUSDT', '1000RATSUSDT', 'JTOUSDT', 'PYTHUSDT', 'IMXUSDT', 'SANDUSDT', 'ZETAUSDT', 'HBARUSDT', 'AXSUSDT', 'RAREUSDT', '1000SHIBUSDT', 'BNXUSDT', 'VETUSDT', 'JASMYUSDT', 'XLMUSDT', 'POLUSDT', 'BLURUSDT', 'SUNDOGUSDT', 'MANAUSDT', 'WUSDT', 'ARKMUSDT', 'SHIBUSDT', 'VIDTUSDT', 'SATSUSDT', 'SUPERUSDT', 'ATHUSDT', 'STORJUSDT', 'BBUSDT', 'OMUSDT', 'ALGOUSDT', 'OMGUSDT', 'LPTUSDT', 'AEVOUSDT', '1INCHUSDT', 'THETAUSDT', 'GRTUSDT', 'CHZUSDT', 'BSVUSDT', 'LISTAUSDT', 'SHIB1000USDT', 'COMPUSDT', 'RDNTUSDT', 'BAKEUSDT', 'BRETTUSDT', 'MEMEUSDT', 'MANTAUSDT', 'SUSHIUSDT', 'EGLDUSDT', 'XAIUSDT', 'FLOKIUSDT', 'DARUSDT', 'YGGUSDT', 'NEOUSDT', 'COTIUSDT', 'QUICKUSDT', 'TRUUSDT', 'BONDUSDT', 'KSMUSDT', 'SSVUSDT', 'CAKEUSDT', 'AUCTIONUSDT', 'TONCOINUSDT', 'SNXUSDT', 'ROSEUSDT', 'BANANAUSDT', 'MYROUSDT', 'ZECUSDT', 'XMRUSDT', 'DYMUSDT', 'MINAUSDT', 'REZUSDT', 'ALTUSDT', '1000LUNCUSDT', 'TNSRUSDT', 'LQTYUSDT', 'ASTRUSDT', 'GMXUSDT', 'MERLUSDT', 'FLOWUSDT', 'RSRUSDT', 'STMXUSDT', 'SFPUSDT', 'CELOUSDT', 'MNTUSDT', 'API3USDT', 'HIGHUSDT', 'ORDERUSDT', 'YFIUSDT', 'COREUSDT', 'CYBERUSDT', 'XTZUSDT', 'ACHUSDT', 'PIXELUSDT', 'CHRUSDT', 'ZENUSDT', 'UMAUSDT', 'BLZUSDT', 'QNTUSDT', 'WOOUSDT', '10000SATSUSDT', 'UNFIUSDT', 'IOTAUSDT', 'GTCUSDT', 'DRIFTUSDT', 'TOKENUSDT', 'ANKRUSDT', 'ENJUSDT', 'USDCUSDT', 'LUNA2USDT', 'STGUSDT', '1000000BABYDOGEUSDT', 'ONEUSDT', 'TWTUSDT', 'EDUUSDT', 'ZILUSDT', 'MAGICUSDT', 'HNTUSDT', 'FLMUSDT', 'LRCUSDT', 'PONKEUSDT', 'IOTXUSDT', 'ACEUSDT', 'ZRXUSDT', 'FXSUSDT', 'QTUMUSDT', 'LUNCUSDT', 'PORTALUSDT', 'RVNUSDT', 'ALPACAUSDT', 'OMNIUSDT', 'LEVERUSDT', 'ZKJUSDT', 'BTCDOMUSDT', 'IDUSDT', 'LOOMUSDT', 'HOOKUSDT', 'BEAMUSDT', 'KLAYUSDT', 'KAVAUSDT', 'ARPAUSDT', 'KEYUSDT', 'BELUSDT', 'USTCUSDT', 'KNCUSDT', 'LINAUSDT', 'MAXUSDT', 'LUNAUSDT', 'MAVIAUSDT', '1000TURBOUSDT', 'VANRYUSDT', 'GLMUSDT', 'DASHUSDT', 'AGIUSDT', 'DUSKUSDT', 'ONTUSDT', 'GASUSDT', 'BGBUSDT', 'MOVRUSDT', 'C98USDT', 'AIUSDT', 'POLYXUSDT', 'HIFIUSDT', 'AXLUSDT', 'ALICEUSDT', 'OGNUSDT', 'ORBSUSDT', 'NFPUSDT', 'METISUSDT', 'PERPUSDT', 'BATUSDT', '1000000MOGUSDT', 'TLMUSDT', 'DOGUSDT', 'BALUSDT', 'HOTUSDT', 'NMRUSDT', 'ZBCNUSDT', 'BONKUSDT', 'NULSUSDT', 'GFTUSDT', 'LITUSDT', 'SYNUSDT', 'AMBUSDT', 'BANDUSDT', 'IOSTUSDT', 'JOEUSDT', 'SXPUSDT', 'XEMUSDT', 'BLASTUSDT', 'ULTIUSDT', 'BICOUSDT', '10000LADYSUSDT', 'MAVUSDT', 'SKLUSDT', 'PAXGUSDT', 'NEIROUSDT', 'CELRUSDT', 'ILVUSDT', 'AGLDUSDT', 'SYSUSDT', 'BEAMXUSDT', 'TUSDT', 'ICXUSDT', 'VELOUSDT', 'LSKUSDT', 'CROUSDT', 'MTLUSDT', 'VOXELUSDT', 'CHESSUSDT', 'PHBUSDT', 'BSWUSDT', 'ATAUSDT', 'GUSDT', 'BADGERUSDT', 'WAVESUSDT', 'CVCUSDT', 'POWRUSDT', 'TAIKOUSDT', 'CTSIUSDT', 'VGXUSDT', 'XVSUSDT', 'AERGOUSDT', 'ZEUSUSDT', 'RPLUSDT', 'ETHWUSDT', 'RENUSDT', 'RIFUSDT', 'MBOXUSDT', 'ETHBTCUSDT', 'FLUXUSDT', 'ALPHAUSDT', 'CVXUSDT', 'NTRNUSDT', 'RONUSDT', 'DENTUSDT', 'CLOUDUSDT', 'NKNUSDT', 'BNTUSDT', 'FOXYUSDT', 'SPELLUSDT', 'BENDOGUSDT', '1000BEERUSDT', 'XVGUSDT', 'SLPUSDT', 'MOCAUSDT', 'RLCUSDT', 'XCHUSDT', 'GMEUSDT', 'AKTUSDT', 'DOP1USDT', 'OXTUSDT', 'TOMIUSDT', 'VRAUSDT', 'WAXPUSDT', 'RONINUSDT', 'HFTUSDT', 'AVAILUSDT', 'PRCLUSDT', 'SLERFUSDT', 'LOOKSUSDT', 'ARKUSDT', 'AIDOGEUSDT', 'CETUSUSDT', 'ONGUSDT', 'SLFUSDT', 'COMBOUSDT', 'SCAUSDT', 'FLRUSDT', 'MOTHERUSDT', 'STPTUSDT', 'DEGENUSDT', 'L3USDT', '1000XECUSDT', '10000WENUSDT', 'CTCUSDT', '1000BTTUSDT', 'AIOZUSDT', 'STEEMUSDT', 'DGBUSDT', 'GODSUSDT', 'CSPRUSDT', 'KDAUSDT', 'DODOXUSDT', 'JSTUSDT', 'USDEUSDT', 'FIREUSDT', 'AUDIOUSDT', 'PIXFIUSDT', 'AEROUSDT', 'CATUSDT', 'SPECUSDT', '1000CATUSDT', 'GLMRUSDT', 'CTKUSDT', 'A8USDT', 'SILLYUSDT', '1000000PEIPEIUSDT', 'PENGUSDT', 'SCUSDT', 'RATSUSDT', 'SWEATUSDT', '10000000AIDOGEUSDT', '$ALTUSDT', 'DODOUSDT', 'MASAUSDT', 'ZKSYNCUSDT', 'ORNUSDT', '1000APUUSDT', 'LAIUSDT', 'RSS3USDT', 'FTTUSDT', 'RAYUSDT', 'ZKFUSDT', 'ZEROLENDUSDT', 'FTNUSDT', 'SNTUSDT', 'FITFIUSDT', 'RAYDIUMUSDT', 'XNOUSDT', 'SLEEPLESSAIUSDT', 'OMNINETWORKUSDT', 'PIRATEUSDT', 'AKROUSDT', '10000COQUSDT', 'IDEXUSDT', 'RADUSDT', 'NYANUSDT', 'MOBILEUSDT', '10000NFTUSDT', 'PROMUSDT', '1CATUSDT', 'BOBAUSDT', 'ZENTUSDT', 'DEFIUSDT', 'NFTUSDT', 'MDTUSDT', 'WAXLUSDT', 'MONUSDT', 'MEMECOINUSDT', 'SAFEUSDT', 'GPTUSDT', 'SWELLUSDT', 'ORCAUSDT', 'XRDUSDT', 'MBLUSDT', 'KISHUUSDT', 'RACAUSDT', 'REQUSDT', 'MANEKIUSDT', 'QIUSDT', 'MYRIAUSDT', 'DAOUSDT', 'SCRTUSDT', 'PHAUSDT', 'OSMOUSDT', 'DATAUSDT', 'COSUSDT', 'XCNUSDT', '$AIUSDT', 'MAXNEWUSDT', '1MBABYDOGEUSDT', 'FUNUSDT', 'ZCXUSDT', 'BONEUSDT', 'FORTHUSDT', 'OGUSDT', 'OMNI1USDT', 'CEEKUSDT', 'FDUSDUSDT', 'MAPOUSDT', 'VTHOUSDT', 'ZEROUSDT', '1000NEIROCTOUSDT', 'LTOUSDT', 'GNOUSDT', 'MATICUSDT', 'BTTUSDT', 'DEXEUSDT', 'MOGUSDT', 'ZKLUSDT', 'BMEXUSDT', 'VENOMUSDT', 'BEERUSDT', 'EIGENUSDT', 'LADYSUSDT', 'USDTUSDT', 'WINUSDT', 'BASKETUSDT', 'TUSDUSDT', 'WENUSDT', 'XAUTUSDT', 'TREMPUSDT']
        for symbol in symbols:
            await ws.subscribe_kline(symbol, "1m")
        
        while True:
            await asyncio.sleep(1)
    except asyncio.CancelledError:
        ws.disconnect
        print("Closed")

if __name__ == "__main__":
    asyncio.run(main())
    